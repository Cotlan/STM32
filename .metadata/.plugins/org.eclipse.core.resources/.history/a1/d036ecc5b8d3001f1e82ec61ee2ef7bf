#include "main.h"

extern UART_HandleTypeDef huart2;
extern TIM_HandleTypeDef htim2;


void microDelay(int us) // us : micro second
{
   int t1 = htim2.Instance->CNT;
//   while(1)
//   {
//      if(htim2.Instance->CNT - t1 >= us) break;
//   }
   while(htim2.Instance->CNT - t1 < us);
//   htim2.Instance->CNT = 0;
//   while(htim2.Instance->CNT < us);
}

void Trigger()
{
   HAL_GPIO_WritePin(Trig_GPIO_Port, Trig_Pin, 0);
   microDelay(10);
   HAL_GPIO_WritePin(Trig_GPIO_Port, Trig_Pin, 1);
   microDelay(10);
   HAL_GPIO_WritePin(Trig_GPIO_Port, Trig_Pin, 0);
}

double Distance()
{
   //int t1, t2;
   int t0, t1, t2;
   htim2.Instance->CNT = 0;
   Trigger();
   // wait unitl Echo high
   //while(!(HAL_GPIO_ReadPin(Echo_GPIO_Port, Echo_Pin)) == 1);
   //while((HAL_GPIO_ReadPin(Echo_GPIO_Port, Echo_Pin)) == 0);
   while((HAL_GPIO_ReadPin(Echo_GPIO_Port, Echo_Pin)) == 0)
   {
      if(htim2.Instance->CNT > 30000) return -1; // TimeOut
   }
   //trigger in 30000us timeout
   t1 = htim2.Instance->CNT;
   //while(!(HAL_GPIO_ReadPin(Echo_GPIO_Port, Echo_Pin)) == 0);
   //while((HAL_GPIO_ReadPin(Echo_GPIO_Port, Echo_Pin)) == 1);
   while((HAL_GPIO_ReadPin(Echo_GPIO_Port, Echo_Pin)) == 1)
   {
      if(htim2.Instance->CNT > t1 + 60000) return -1; // TimeOut
   }
   // distance = { ( 0.340 * (t2 - t1) ) / 2 }mm , 2:
   t2 = htim2.Instance->CNT;

   double dist = (t2 - t1) * 0.17;
   return dist;
}
